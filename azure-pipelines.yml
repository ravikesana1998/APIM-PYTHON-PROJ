trigger:
  branches:
    include:
      - main

pool:
  name: 'self-hosted-pool'

variables:
  targetSwaggerUrl: 'https://pythonapps-e0hmd6eucuf9acg5.canadacentral-01.azurewebsites.net/swagger/v1/swagger.json'
  SWAGGER_FILE: 'swagger.json'
  SPLIT_DIR: 'split'
  PYTHON_PATH: '/usr/bin/python3'

  AZURE_SUBSCRIPTION_ID: '85b61d1d-92dd-4311-90eb-4f3e1263adca'
  AZURE_RESOURCE_GROUP: 'rg-23-6'
  AZURE_APIM_NAME: 'dotnetapi9'
  AZURE_APIM_API_ID: 'dotnetapi9'

stages:

# ---------------------------------- #
# Stage 1: Download Swagger
# ---------------------------------- #
- stage: BuildAndDownloadSwagger
  displayName: ‚ú® Build & Export Swagger
  jobs:
    - job: ExportSwagger
      steps:
        - script: |
            curl -sSL "$targetSwaggerUrl" -o "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE"
          displayName: üìÅ Download Swagger JSON
        - script: |
            echo "‚úÖ Downloaded swagger.json:"
            head -n 20 "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE"
          displayName: üîç Preview Swagger Top

# ---------------------------------- #
# Stage 2: Split & Sync to APIM
# ---------------------------------- #
- stage: SplitAndSyncToAPIM
  displayName: üåÄ Split + Sync to Azure API Management
  dependsOn: BuildAndDownloadSwagger
  jobs:
    - job: SyncToAPIM
      steps:
        - script: |
            rm -rf "$BUILD_SOURCESDIRECTORY/$SPLIT_DIR"
            mkdir -p "$BUILD_SOURCESDIRECTORY/$SPLIT_DIR"
            displayName: üìÇ Clean Split Folder

        - script: |
            echo "üìÇ List all files in sources directory:"
            find "$BUILD_SOURCESDIRECTORY" -type f
            displayName: üß™ Debug: List All Files
        - script: |
            echo "‚ûï Adding missing operationIds..."
            "$PYTHON_PATH" "$BUILD_SOURCESDIRECTORY/add_operation_ids.py" "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE"

            echo "üîç Validating operationIds..."
            id_count=$(grep -o '"operationId"' "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE" | wc -l)
            if [ "$id_count" -eq 0 ]; then
              echo "‚ùå No operationIds found. Failing pipeline."
              exit 1
            fi
            echo "‚úÖ Found $id_count operationIds"
          displayName: üß† Auto-generate Operation IDs

        - script: |
            echo "üîç Verifying swagger.json location:"
            ls -l "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE"

            "$PYTHON_PATH" "$BUILD_SOURCESDIRECTORY/split_swagger_by_method.py" \
              "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE" \
              "$BUILD_SOURCESDIRECTORY/$SPLIT_DIR"
          displayName: ‚úÇÔ∏è Split Swagger into Per-Operation Files

        - script: |
            echo "üß™ Checking if API exists in APIM..."
            if ! az apim api show \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --service-name "$AZURE_APIM_NAME" \
              --api-id "$AZURE_APIM_API_ID" &>/dev/null; then

              echo "‚ûï API not found. Creating it from Swagger..."
              az apim api import \
                --resource-group "$AZURE_RESOURCE_GROUP" \
                --service-name "$AZURE_APIM_NAME" \
                --api-id "$AZURE_APIM_API_ID" \
                --path "$AZURE_APIM_API_ID" \
                --display-name "$AZURE_APIM_API_ID" \
                --specification-format OpenApi \
                --specification-path "$BUILD_SOURCESDIRECTORY/$SWAGGER_FILE" || {
                  echo '‚ùå API import failed'; exit 1;
                }
            else
              echo "‚úÖ API already exists in APIM."
            fi
          displayName: üß™ Auto-Create API If Missing

        - script: |
            "$PYTHON_PATH" "$BUILD_SOURCESDIRECTORY/validate_apim_vs_swagger.py"
          env:
            AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
            AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
            AZURE_APIM_NAME: $(AZURE_APIM_NAME)
            AZURE_APIM_API_ID: $(AZURE_APIM_API_ID)
          displayName: üîí Validate APIM vs Swagger

        - script: |
            "$PYTHON_PATH" "$BUILD_SOURCESDIRECTORY/cleanup_removed_operations.py"
          env:
            AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
            AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
            AZURE_APIM_NAME: $(AZURE_APIM_NAME)
            AZURE_APIM_API_ID: $(AZURE_APIM_API_ID)
          displayName: üßπ Clean Removed Operations

        - script: |
            "$PYTHON_PATH" "$BUILD_SOURCESDIRECTORY/sync_apim_operations.py"
          env:
            AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
            AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
            AZURE_APIM_NAME: $(AZURE_APIM_NAME)
            AZURE_APIM_API_ID: $(AZURE_APIM_API_ID)
          displayName: üöÄ Sync Updated Operations to APIM

        - script: |
            az apim api update \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --service-name "$AZURE_APIM_NAME" \
              --api-id "$AZURE_APIM_API_ID" \
              --set isCurrent=true
          displayName: üì¢ Publish Latest Revision
