trigger:
- main

variables:
  dockerRegistryServiceConnection: '99c0a625-5f02-4515-b601-ee6f0455d046'
  imageRepository: 'pythonrreg'
  containerRegistry: 'pythonrreg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  imageNameWithTag: '$(containerRegistry)/$(imageRepository):$(tag)'
  imageNameLatest: '$(containerRegistry)/$(imageRepository):latest'
  swaggerUrl: 'https://pythonapps-e0hmd6eucuf9acg5.canadacentral-01.azurewebsites.net/swagger/v1/swagger.json'
  apimName: 'python-api'
  apimResourceGroup: 'rg-23-6'
  apimApiName: 'python-api'
  subscriptionId: '85b61d1d-92dd-4311-90eb-4f3e1263adca'

pool:
  name: 'self-hosted-pool'

stages:
# ----------- BUILD ----------- #
- stage: Build
  displayName: 'Docker Build'
  jobs:
    - job: BuildImage
      displayName: 'Build Docker Image'
      steps:
        - script: |
            docker build -t $(imageNameWithTag) -t $(imageNameLatest) -f $(dockerfilePath) .
          displayName: 'Build Docker Image'

# ----------- PUSH ------------ #
- stage: Push
  displayName: 'Push Docker Image to ACR'
  dependsOn: Build
  jobs:
    - job: PushImage
      displayName: 'Push to ACR'
      steps:
        - task: Docker@2
          displayName: 'Login to ACR'
          inputs:
            command: login
            containerRegistry: $(dockerRegistryServiceConnection)

        - script: |
            docker push $(imageNameWithTag)
            docker push $(imageNameLatest)
          displayName: 'Push Docker Images'

# --------- IMPORT TO APIM -------- #
- stage: ImportOpenAPI
  displayName: 'Import Swagger into APIM'
  dependsOn: Push
  jobs:
    - job: ImportSwagger
      displayName: 'Download, Split, and Import Swagger'
      steps:
        - script: |
            echo "Downloading Swagger..."
            curl -sSL "$(swaggerUrl)" -o swagger.json

            echo "Splitting Swagger by method..."
            python3 split_swagger_by_method.py

            echo "Importing operations into APIM..."
            export APIM_API_NAME=$(apimApiName)
            export APIM_RESOURCE_GROUP=$(apimResourceGroup)
            export APIM_SERVICE_NAME=$(apimName)
            export APIM_SUBSCRIPTION_ID=$(subscriptionId)

            python3 sync_apim_operations.py
          displayName: 'Run Python Import Scripts'
