trigger:
- main

variables:
  dockerRegistryServiceConnection: '99c0a625-5f02-4515-b601-ee6f0455d046'
  imageRepository: 'mgapp'                            # Name of your app/image in ACR
  containerRegistry: 'pythonrreg.azurecr.io'          # ACR login server
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  imageNameWithTag: '$(containerRegistry)/$(imageRepository):$(tag)'
  imageNameLatest: '$(containerRegistry)/$(imageRepository):latest'

pool:
  name: 'self-hosted-pool'

stages:
# ------------------ Stage 1: BUILD ------------------
- stage: Build
  displayName: 'Docker Build'
  jobs:
  - job: BuildImage
    displayName: 'Build Docker Image'
    steps:
    - script: |
        echo "Building Docker image: $(imageNameWithTag)"
        docker build -t $(imageNameWithTag) -t $(imageNameLatest) -f $(dockerfilePath) .
      displayName: 'Build Docker Image'

# ------------------ Stage 2: PUSH ------------------
- stage: Push
  displayName: 'Push to ACR'
  dependsOn: Build
  jobs:
  - job: PushImage
    displayName: 'Push Docker Image to ACR'
    steps:
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)

    - script: |
        echo "Pushing Docker image to ACR..."
        docker push $(imageNameWithTag)
        docker push $(imageNameLatest)
      displayName: 'Push Docker Image'
