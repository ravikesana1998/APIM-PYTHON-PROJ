trigger:
  - main

variables:
  dockerRegistryServiceConnection: '99c0a625-5f02-4515-b601-ee6f0455d046'
  imageRepository: 'pythonrreg'
  containerRegistry: 'pythonrreg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  imageNameWithTag: '$(containerRegistry)/$(imageRepository):$(tag)'
  imageNameLatest: '$(containerRegistry)/$(imageRepository):latest'
  swaggerUrl: 'https://pythonapps-e0hmd6eucuf9acg5.canadacentral-01.azurewebsites.net/swagger/v1/swagger.json'
  apimName: 'dotnetapi9'
  apimResourceGroup: 'rg-23-6'
  apimApiName: 'dotnetapi9'
  subscriptionId: '85b61d1d-92dd-4311-90eb-4f3e1263adca'

pool:
  name: 'self-hosted-pool'

stages:

# ---------------------------------- #
#    STAGE 1: Build and Push Image   #
# ---------------------------------- #
- stage: BuildAndPush
  displayName: 'Build and Push Docker Image'
  jobs:
    - job: BuildAndPushImage
      steps:
        - task: Docker@2
          displayName: 'Login to ACR'
          inputs:
            command: login
            containerRegistry: $(dockerRegistryServiceConnection)

        - script: |
            docker build -t $(imageNameWithTag) -t $(imageNameLatest) -f $(dockerfilePath) .
            docker push $(imageNameWithTag)
            docker push $(imageNameLatest)
          displayName: 'Build and Push Docker Image'

# ---------------------------------- #
#     STAGE 2: Import to APIM        #
# ---------------------------------- #
- stage: ImportToAPIM
  displayName: 'Process Swagger and Prepare for Sync'
  dependsOn: BuildAndPush
  jobs:
    - job: ProcessSwagger
      displayName: 'Download + Process Swagger'
      steps:

        - task: AzureCLI@2
          displayName: 'Download Swagger from App Service'
          inputs:
            azureSubscription: 'DevopsServiceConnection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              cd $(Build.SourcesDirectory)
              echo "ðŸ“¥ Downloading Swagger..."
              curl -sSL "$(swaggerUrl)" -o swagger.json

        - task: Bash@3
          displayName: 'Auto-generate operationId for missing ops'
          inputs:
            targetType: 'inline'
            script: |
              cd $(Build.SourcesDirectory)
              python3 add_operation_ids.py swagger.json

        - task: Bash@3
          displayName: 'Split Swagger into individual operations'
          inputs:
            targetType: 'inline'
            script: |
              cd $(Build.SourcesDirectory)
              export AZURE_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
              export AZURE_RESOURCE_GROUP=$(apimResourceGroup)
              export AZURE_APIM_NAME=$(apimName)
              export AZURE_APIM_API_ID=$(apimApiName)
              mkdir -p split
              python3 split_swagger_by_method.py
