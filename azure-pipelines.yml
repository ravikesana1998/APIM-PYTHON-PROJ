trigger:
  branches:
    include:
      - main

pool:
  name: 'self-hosted-pool'

variables:
  # Swagger-related paths
  targetSwaggerUrl: 'https://pythonapps-e0hmd6eucuf9acg5.canadacentral-01.azurewebsites.net/swagger/v1/swagger.json'
  SWAGGER_FILE: 'swagger.json'
  SPLIT_DIR: 'split'
  PYTHON_PATH: '/usr/bin/python3'

  # Azure APIM configuration
  AZURE_SUBSCRIPTION_ID: '85b61d1d-92dd-4311-90eb-4f3e1263adca'
  AZURE_RESOURCE_GROUP: 'rg-23-6'
  AZURE_APIM_NAME: 'dotnetapi9'
  AZURE_APIM_API_ID: 'dotnetapi9'

stages:

- stage: BuildAndDownloadSwagger
  displayName: ‚ú® Build & Export Swagger
  jobs:
    - job: ExportSwagger
      steps:
        - script: |
            curl -sSL $(targetSwaggerUrl) -o $(SWAGGER_FILE)
          displayName: üìÅ Download Swagger JSON

        - script: |
            echo "‚úÖ Downloaded swagger.json:"
            cat $(SWAGGER_FILE) | head -n 20
          displayName: üîç Preview Swagger Top

- stage: SplitAndSyncToAPIM
  displayName: üåÄ Split + Sync to Azure API Management
  dependsOn: BuildAndDownloadSwagger
  jobs:
    - job: SyncToAPIM
      steps:

        - script: |
            which $(PYTHON_PATH)
            $(PYTHON_PATH) --version
          displayName: üêç Check Python Version

        - script: |
            $(PYTHON_PATH) -m pip install --upgrade pip
            if [ -f requirements.txt ]; then
              $(PYTHON_PATH) -m pip install -r requirements.txt
            else
              echo "‚ö†Ô∏è No requirements.txt found. Skipping dependency install."
            fi
          displayName: üì¶ Install Python Dependencies

        - script: |
            rm -rf $(SPLIT_DIR)
            mkdir -p $(SPLIT_DIR)
          displayName: üìÇ Clean Split Folder

        - script: |
            $(PYTHON_PATH) scripts/split_swagger_by_method.py $(SWAGGER_FILE) $(SPLIT_DIR)
          displayName: ‚úÇÔ∏è Split Swagger into Per-Operation Files

        - script: |
            echo "üß™ Checking if API exists in APIM..."
            if ! az apim api show \
              --resource-group "$(AZURE_RESOURCE_GROUP)" \
              --service-name "$(AZURE_APIM_NAME)" \
              --api-id "$(AZURE_APIM_API_ID)" &>/dev/null; then

              echo "‚ûï API not found. Creating it from Swagger..."
              az apim api import \
                --resource-group "$(AZURE_RESOURCE_GROUP)" \
                --service-name "$(AZURE_APIM_NAME)" \
                --api-id "$(AZURE_APIM_API_ID)" \
                --path "$(AZURE_APIM_API_ID)" \
                --display-name "$(AZURE_APIM_API_ID)" \
                --specification-format OpenApi \
                --specification-path "$(SWAGGER_FILE)" || {
                  echo '‚ùå API import failed'; exit 1;
                }
            else
              echo "‚úÖ API already exists in APIM."
            fi
          displayName: üß™ Auto-Create API If Missing

        - script: |
            $(PYTHON_PATH) scripts/validate_apim_vs_swagger.py
          env:
            AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
            AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
            AZURE_APIM_NAME: $(AZURE_APIM_NAME)
            AZURE_APIM_API_ID: $(AZURE_APIM_API_ID)
          displayName: üîí Validate APIM vs Swagger

        - script: |
            $(PYTHON_PATH) scripts/cleanup_removed_operations.py
          env:
            AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
            AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
            AZURE_APIM_NAME: $(AZURE_APIM_NAME)
            AZURE_APIM_API_ID: $(AZURE_APIM_API_ID)
          displayName: üßπ Clean Removed Operations

        - script: |
            $(PYTHON_PATH) scripts/sync_apim_operations.py
          env:
            AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
            AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
            AZURE_APIM_NAME: $(AZURE_APIM_NAME)
            AZURE_APIM_API_ID: $(AZURE_APIM_API_ID)
          displayName: üöÄ Sync Updated Operations to APIM

        - script: |
            az apim api update \
              --resource-group "$(AZURE_RESOURCE_GROUP)" \
              --service-name "$(AZURE_APIM_NAME)" \
              --api-id "$(AZURE_APIM_API_ID)" \
              --set isCurrent=true
          displayName: üì¢ Publish Latest Revision
